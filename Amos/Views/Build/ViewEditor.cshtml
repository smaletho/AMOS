@model Amos.Models.PageViewModel
@{
    ViewBag.Title = "Editor";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var pageTypeList = new List<SelectListItem>();
    pageTypeList.Add(new SelectListItem { Text = "content", Value = "content" });
    pageTypeList.Add(new SelectListItem { Text = "quiz", Value = "quiz" });
    pageTypeList.Add(new SelectListItem { Text = "survey", Value = "survey" });
}

<div class="container-fluid" style="margin-bottom:10px;width:50%;">
    <div class="input-group">
        <span class="input-group-addon" id="basic-addon1">Name</span>
        <input type="text" class="form-control" placeholder="New Page" aria-describedby="basic-addon1" value="@Model.PageName">
    </div>
</div>

<div class="container-fluid" style="width:50%;">
    <div class="input-group">
        <span class="input-group-addon" id="basic-addon2">Type</span>
        <select id="PageType" name="PageType" class="form-control" aria-describedby="basic-addon2">
            <option @if (Model.PageType == "content") { WriteLiteral(" selected='selected' "); } value="content">content</option>
            <option @if (Model.PageType == "quiz") { WriteLiteral(" selected='selected' "); } value="quiz">quiz</option>
            <option @if (Model.PageType == "survey") { WriteLiteral(" selected='selected' "); } value="survey">survey</option>
        </select>
    </div>

</div>
@*<div class="row" style="margin: 20px;">
    <div class="col-md-4">
        <label>
            Page name @Html.TextBoxFor(x => x.PageName)
        </label>
    </div>
    <div class="col-md-4">
        <label>
            Page type:
            @Html.DropDownListFor(x => x.PageType, pageTypeList)
        </label>
    </div>
    <div class="col-md-4">
        <button type="button" id="view-page">preview</button>
        <button type="button" id="save-page">submit</button>
    </div>
</div>*@


<div class="row" style="margin-top:20px;">
    <div class="col-lg-5">
        <p>XML</p>
        <textarea id="XmlContent" style="width:100%;height:400px;" @*style="width:800px;height:400px;max-width:800px;"*@>@Model.XmlContent</textarea>
    </div>
    <div class="col-lg-2"></div>
    <div class="col-lg-5">
        <p>Validation</p>
        <div class="validation-box"></div>
    </div>
</div>




@*<div class="row">
    <div class="col-lg-12">
        <textarea id="XmlContent" style="width:800px;height:400px;max-width:800px;">@Model.XmlContent</textarea>
        
    </div>
</div>*@




@Html.HiddenFor(x => x.PageId)


@section scripts{
    <script src="~/Content/js/shared.js"></script>
    <script>
        var URL_SavePage = '@Url.Action("SavePage")';
        var URL_ViewPage = '@Url.Action("ViewPage", new { id = Model.PageId })';

        function savePageSuccess(data) {
            alert(data);
        }

        function savePageFail(data) {
            alert("Fail :( Check the console");
            console.log('fail', data);
        }
        $(function () {


            $("#save-page").on('click', function () {
                savePage(savePageSuccess);
            });

            $("#view-page").on('click', function () {
                savePage(function () {
                    window.location = URL_ViewPage;
                });
                
            });

            updateValidateWindow();
        });

        function savePage(callback) {
            
            if ($("#PageName").val().trim() === "") {
                alert("Please enter a page name.");
                return false;
            }


            var content = $("#XmlContent").val();
            var arr;
            try {
                arr = $.parseXML(content);
            } catch (e) {
                alert("XML couldn't be parsed. Check if it's valid. " + e.Message);
                return false;
            }

            //.item src
            //var arr = $(".item").map(function () { return $(this).prop('src'); }).get();
            var arr = $(arr).find("image").map(function () {
                return this.attributes["source"].value;
            }).get();

            //var s = new XMLSerializer();
            var str = content;//s.serializeToString($("#XmlContent").val());
            var pId = $("#PageId").val();
            var name = $("#PageName").val().trim();
            transmitAction(URL_SavePage, callback, savePageFail, "",
                {
                    xml: str,
                    images: arr,
                    pageId: pId,
                    name: name,
                    type: $("#PageType").val()
                }
                , true);
            
        }

        function updateValidateWindow() {
            var content = $("#XmlContent").val();
        }
    </script>
}