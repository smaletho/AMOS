@model Amos.Models.PageViewModel
@{
    ViewBag.Title = "Editor";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var pageTypeList = new List<SelectListItem>();
    pageTypeList.Add(new SelectListItem { Text = "content", Value = "content" });
    pageTypeList.Add(new SelectListItem { Text = "quiz", Value = "quiz" });
    pageTypeList.Add(new SelectListItem { Text = "survey", Value = "survey" });
}

<div class="row" style="margin: 20px;">
    <div class="col-md-4">
        <label>
            Page name @Html.TextBoxFor(x => x.PageName)
        </label>
    </div>
    <div class="col-md-4">
        <label>
            Page type:
            @Html.DropDownListFor(x => x.PageType, pageTypeList)
        </label>
    </div>
    <div class="col-md-4">
        <button type="button" id="view-page">preview</button>
        <button type="button" id="save-page">submit</button>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <textarea id="XmlContent" style="width:800px;height:400px;max-width:800px;">@Model.XmlContent</textarea>
        
    </div>
</div>




@Html.HiddenFor(x => x.PageId)


@section scripts{
    <script src="~/Content/js/shared.js"></script>
    <script>
        var URL_SavePage = '@Url.Action("SavePage")';
        var URL_ViewPage = '@Url.Action("ViewPage", new { id = Model.PageId })';

        function savePageSuccess(data) {
            alert(data);
        }

        function savePageFail(data) {
            alert("Fail :( Check the console");
            console.log('fail', data);
        }
        $(function () {


            $("#save-page").on('click', function () {
                savePage(savePageSuccess);
            });

            $("#view-page").on('click', function () {
                savePage(function () {
                    window.location = URL_ViewPage;
                });
                
            });
        });

        function savePage(callback) {
            
            if ($("#PageName").val().trim() === "") {
                alert("Please enter a page name.");
                return false;
            }


            var content = $("#XmlContent").val();
            var arr;
            try {
                arr = $.parseXML(content);
            } catch {
                alert("XML couldn't be parsed. Check if it's valid.");
                return false;
            }

            //.item src
            //var arr = $(".item").map(function () { return $(this).prop('src'); }).get();
            var arr = $(arr).find("image").map(function () {
                return this.attributes["source"].value;
            }).get();

            //var s = new XMLSerializer();
            var str = content;//s.serializeToString($("#XmlContent").val());
            var pId = $("#PageId").val();
            var name = $("#PageName").val().trim();
            transmitAction(URL_SavePage, callback, savePageFail, "",
                {
                    xml: str,
                    images: arr,
                    pageId: pId,
                    name: name,
                    type: $("#PageType").val()
                }
                , true);
            
        }
    </script>
}